apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: dev
  namespace: tracing-system
spec:
  observability:
    metrics:
      enableMetrics: true
  config:
    extensions:
      bearertokenauth:
        filename: "/var/run/secrets/kubernetes.io/serviceaccount/token"

    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}
      jaeger:
        protocols:
          grpc: {}
          thrift_http: {}
          thrift_compact: {}
          thrift_binary: {}
      zipkin: {}

    processors:
      k8sattributes: {}
      batch: {}
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 25

    exporters:
      debug: {}

      otlphttp/tempo:
        endpoint: https://tempo-east-gateway.tracing-system.svc.cluster.local:8080/api/traces/v1/istio-dev-east
        tls:
          insecure: false
          ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
        auth:
          authenticator: bearertokenauth

    service:
      telemetry:
        logs:
          level: "INFO"
          development: true
          encoding: "json"
        metrics:
          #  As of Collector v0.123.0, the service::telemetry::metrics::address setting is ignored. In earlier versions, it could be configured with:
          # https://opentelemetry.io/docs/collector/internal-telemetry/
          address: 0.0.0.0:8888
          # basic, normal, detailed
      #          level: detailed
      #          readers:
      #            - pull:
      #                exporter:
      #                  prometheus:
      #                    host: '0.0.0.0'
      #                    port: 8888
      extensions: [bearertokenauth]
      pipelines:
        # Remove this section if Tempo is not deployed
        traces:
          receivers: [otlp, jaeger, zipkin]
          processors: [memory_limiter, k8sattributes, batch]
          exporters:
            - debug
            - otlphttp/tempo
---
### RBAC for sending logs to Tempo
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tempostack-traces-write
rules:
  - apiGroups:
      - 'tempo.grafana.com'
    # this needs to match tenant name in the CR/tenants.yaml and the tenant has be sent in X-Scope-OrgID
    # The API gateway sends the tenantname as resource (res) to OPA sidecar
    resources:
      - istio-dev-east
    resourceNames:
      - traces
    verbs:
      - 'create'
  - apiGroups: [""]
    resources: ["pods", "namespaces", "nodes"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
---
### RBAC for sending logs to Tempo
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tempostack-traces
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempostack-traces-write
subjects:
  - kind: ServiceAccount
    name: dev-collector
    namespace: tracing-system